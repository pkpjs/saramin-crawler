name: Run Saramin Crawler

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"  # 한국시간 오전 9시 자동 실행 (UTC 0시 기준)

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_RECEIVER: ${{ secrets.EMAIL_RECEIVER }}
      EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install requests beautifulsoup4 pandas google-auth google-auth-oauthlib google-api-python-client

      - name: Run Saramin Crawler
        run: python test.py

      - name: Remove old CSV files (Keep only today's)
        run: |
          echo "🧹 Removing old CSV files (keep only today's)..."
          # UTC 기준 오늘 날짜를 포함하지 않는 파일들을 삭제
          find . -maxdepth 1 -type f -name "saramin_results_*.csv" \
            ! -name "saramin_results_$(date -u +'%Y%m%d')*.csv" -delete || true
          echo "✅ CSV cleanup completed."

      - name: Commit and Push HTML & CSV
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          echo "✅ Pulling latest changes with rebase..."
          git pull origin main --rebase || true

          # 새로 추가/수정된 파일 및 HTML 파일을 스테이징합니다.
          git add docs/*.html *.csv || true
          
          # 🚨 핵심 수정: Git이 추적하는 파일 중 삭제된 파일을 스테이징합니다.
          # 이 명령이 있어야 'Remove old CSV files' 스텝에서 지운 파일이
          # Git 커밋에 포함되어 최종적으로 GitHub 저장소에서 삭제됩니다.
          git add -u . || true 

          if git diff --cached --quiet; then
            echo "✅ No changes detected. Skipping commit."
          else
            git commit -m "🔄 Auto update saramin_results_latest.html & CSV ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git push origin main
            echo "✅ Successfully pushed changes."
          fi